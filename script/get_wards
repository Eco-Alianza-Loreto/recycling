#!/usr/bin/env node

var request = require('request');
var fs = require('fs');
var path = './migrations/data/wards/';
var async = require('async');

function enumerate(n) {
  // create an array of values up to n - 1 so the array is length n
  return Array.apply(null, { length: n }).map(Number.call, Number);
}

function createFile(data, index) {
  fs.writeFile(path + 'ward'+(index+1)+'.json', data, function(err) {
    if (err) { throw err; }
    console.log('Wrote ' + (index+1) + '.json');
  });
}

function start() {
  if (process.argv[2] !== 'serious') {
    console.log('Before you run this script, please run "rm migrations/data/wards/*.json"');
    console.log('To run this script, use the command line argument "serious" like so: ./script/get_wards serious');
    process.exit(0);
  }
  var wards = enumerate(50);
  async.mapLimit(wards, 5, function(n, cb) {
    var url = 'http://boundaries.tribapps.com/1.0/boundary-set/wards/' + (n + 1);
    var filename = path + 'ward' + (n+1) + '.json';
    request.get(url, function(err, res, data) {
      if (err) {
        throw err;
      }
      if (res.statusCode >= 200 && res.statusCode < 500) {
        cb(null, {data: data, ward: n});
      }
    });
  }, function(err, results) {
    if (err) {
      throw err;
    }
    results.map(function (result) {
      console.log(result.data);
      createFile(result.data, result.ward);
    });
    console.log('---COMPLETE---');
  });
}

start();
